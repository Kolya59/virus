Клиент:
Запускается
Сканирует все сетевые интрефейсы и открытые порты с запущенными на них службами
Марашлизует полученные данные в protobuf
Запрашивает ip функции, которая генерирует ключ шифрования
Шифрует данные полученным сертификатом
Заправшивает ip сервера, который сохранит данные
Отправляет шифрованные данные серверу
Выключается

Если на каком-то этапе произошла ошибка клиент отключается, не логируя данные

Функция-диспетчер:
Получает uuid от клиента
Идет в БД и берет список всех серверов
Опрашивает сервера для определения их доступности
Удаляет из БД все сервера, которые не активны
Выбирает случайный активный сервер
Запрашивает сертификат у сервера, зашифрованный SHA1 с солью uuid клиента
Отдает ip сервера и сертификат клиенту

Если нет активных серверов, то функция ждет определенное время, опрашивает еще раз. Если ответа нет, то отдает ошибку, по получению которой клиент повторит сеанс связи через n секунд.

Сервер:
Регистрируется в БД
Получает запрос на сохранение данных
Отдает сертификат, шифрованный uuid клиента
Получает данные от клиента
Сохраняет их в БД

БД - PostgreSQL (возможно, данные и сервера в разных БД)
Клиент - Go
Сервер - Go?
Функция-диспетчер - Python в gcloud